# app/docker-compose.yml
services:
  # web:
  #   build:
  #     context: ..
  #     dockerfile: ./app/Dockerfile
  #   container_name: fastapi_web
  #   restart: always
  #   command: uvicorn main:app --host 0.0.0.0 --port 8008
  #   environment:
  #     - PYTHONPATH=/app
  #   volumes:
  #     - ../app:/app
  #     - ../alembic.ini:/app/alembic.ini
  #     - ../alembic:/app/alembic
  #   ports:
  #     - "8008:8008"
  #   env_file:
  #     - ../app/.env
  #   networks:
  #     - shared_network


  airflow:
    image: apache/airflow:2.5.0
    container_name: airflow_scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=<random_fernet_key>  # Générer une clé pour la sécurité Airflow
    volumes:
      - ./dags:/opt/airflow/dags
    ports:
      - "8484:8484"
    networks:
      - shared_network
    depends_on:
      - kafka

  kafka:
    image: wurstmeister/kafka
    container_name: kafka_broker
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
    networks:
      - shared_network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - shared_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus_api
    volumes:
      - ../prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - shared_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - shared_network
    depends_on:
      - prometheus

volumes:
  app-data:
    driver: local  # Stockage pour les textes extraits des vidéos
  grafana-storage:
    driver: local

networks:
  shared_network:
    external: true
